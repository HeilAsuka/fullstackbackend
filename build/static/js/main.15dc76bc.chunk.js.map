{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","services/Person.js","App.js","index.js"],"names":["Persons","persons","handleRemovePerson","map","person","key","id","name","number","onClick","PersonForm","props","onSubmit","addPerson","value","newName","onChange","handlePersonChange","newPhoneNumber","handlePhoneNumberChange","type","Filter","filteredString","filterPerson","Notification","notificationType","notificationContent","notification","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","console","log","baseUrl","getAllPersons","a","request","axios","get","res","data","personObject","post","removePerson","delete","updatePerson","put","App","useState","setPersons","setNewName","setNewPhoneNumber","setFilterString","setNotificationContent","setNotificationType","filteredPerson","filter","toLowerCase","includes","useEffect","personSevice","then","event","target","preventDefault","trim","hasSamePerson","length","window","confirm","catch","error","setTimeout","concat","res_person","personNeedRemove","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15dc76bc.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Persons = ({ persons, handleRemovePerson }) => {\r\n    return persons.map((person) => (\r\n        <div key={person.id}>\r\n            {person.name} {person.number}{\" \"}\r\n            <button onClick={() => handleRemovePerson(person)}>Remove</button>\r\n        </div>\r\n    ));\r\n};\r\nexport default Persons;\r\n","import React from \"react\";\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.addPerson}>\r\n            <div>\r\n                name:{\" \"}\r\n                <input\r\n                    value={props.newName}\r\n                    onChange={props.handlePersonChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                number:{\" \"}\r\n                <input\r\n                    value={props.newPhoneNumber}\r\n                    onChange={props.handlePhoneNumberChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n            Filter show with{\" \"}\r\n            <input\r\n                value={props.filteredString}\r\n                onChange={props.filterPerson}></input>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter","import React from \"react\";\r\nconst Notification = ({ notificationType, notificationContent }) => {\r\n    const successStyle = {\r\n        color: \"green\",\r\n        background: \"lightgrey\",\r\n        fontSize: 20,\r\n        borderStyle: \"solid\",\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10,\r\n    };\r\n    const errorStyle = {\r\n        color: \"red\",\r\n        background: \"lightgrey\",\r\n        fontSize: 20,\r\n        borderStyle: \"solid\",\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10,\r\n    };\r\n    let notification = null;\r\n    switch (notificationType) {\r\n        case \"success\":\r\n            notification = (\r\n                <div style={successStyle}>{notificationContent}</div>\r\n            );\r\n            break;\r\n        case \"error\":\r\n            notification = <div style={errorStyle}>{notificationContent}</div>;\r\n            break;\r\n        default:\r\n            console.log('No notification');\r\n    }\r\n    return notification;\r\n};\r\nexport default Notification;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAllPersons = async () => {\r\n    const request = axios.get(baseUrl);\r\n    const res = await request;\r\n    return res.data;\r\n};\r\nconst addPerson = async (personObject) => {\r\n    const request = axios.post(baseUrl, personObject);\r\n    const res = await request;\r\n    return res.data;\r\n};\r\nconst removePerson = async (personObject) => {\r\n    const request = axios.delete(`${baseUrl}/${personObject.id}`);\r\n    const res = await request;\r\n    return res.data;\r\n};\r\nconst updatePerson = async (id, personObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, personObject);\r\n    const res = await request;\r\n    return res.data;\r\n};\r\n\r\nexport default {\r\n    getAllPersons,\r\n    addPerson,\r\n    removePerson,\r\n    updatePerson,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport Persons from \"./components/Persons\";\nimport PersonForm from \"./components/PersonForm\";\nimport Filter from \"./components/Filter\";\nimport Notification from \"./components/Notification\";\nimport personSevice from \"./services/Person\";\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState(\"\");\n    const [newPhoneNumber, setNewPhoneNumber] = useState(\"\");\n    const [filteredString, setFilterString] = useState(\"\");\n    const [notificationContent, setNotificationContent] = useState(\"\");\n    const [notificationType, setNotificationType] = useState(\"\");\n    const filteredPerson = filteredString\n        ? persons.filter((person) =>\n              person.name.toLowerCase().includes(filteredString.toLowerCase())\n          )\n        : persons;\n    useEffect(() => {\n        personSevice.getAllPersons().then((persons) => setPersons(persons));\n    }, []);\n    const addPerson = (event) => {\n        event.preventDefault();\n        const personObject = {\n            name: newName.trim(),\n            number: newPhoneNumber.trim(),\n        };\n        const hasSamePerson = persons.filter(\n            (person) => person.name === personObject.name\n        );\n        if (hasSamePerson.length) {\n            if (\n                window.confirm(\n                    `${personObject.name} is already added to phonebook, replace it with new one ?`\n                )\n            ) {\n                personSevice\n                    .updatePerson(hasSamePerson[0].id, personObject)\n                    .then(() => {\n                        personSevice\n                            .getAllPersons()\n                            .then((persons) => setPersons(persons));\n                    })\n                    .catch((error) => {\n                        setNotificationType(\"error\");\n                        setNotificationContent(\n                            `Information of ${personObject.name} is already removed`\n                        );\n                        setTimeout(() => {\n                            setNotificationType(null);\n                            setNotificationContent(null);\n                        }, 5000);\n                    });\n            }\n        } else {\n            setPersons(persons.concat(personObject));\n            personSevice.addPerson(personObject).then((res_person) => {\n                setPersons(persons.concat(res_person));\n                setNotificationType(\"success\");\n                setNotificationContent(`${res_person.name} added to phonebook`);\n                setTimeout(() => {\n                    setNotificationType(null);\n                    setNotificationContent(null);\n                }, 5000);\n            });\n        }\n        setNewName(\"\");\n        setNewPhoneNumber(\"\");\n    };\n    const handleRemovePerson = (personNeedRemove) => {\n        if (\n            window.confirm(\n                `Are you sure you want to remove ${personNeedRemove.name} ?`\n            )\n        ) {\n            personSevice\n                .removePerson(personNeedRemove)\n                .then(() => {\n                    setPersons(\n                        persons.filter(\n                            (person) => person.id !== personNeedRemove.id\n                        )\n                    );\n                    setNotificationType(\"success\");\n                    setNotificationContent(`${personNeedRemove.name} removed`);\n                    setTimeout(() => {\n                        setNotificationType(null);\n                        setNotificationContent(null);\n                    }, 5000);\n                })\n                .catch((error) => {\n                    setNotificationType(\"error\");\n                    setNotificationContent(\n                        `Information of ${personNeedRemove.name} is already removed`\n                    );\n                    setTimeout(() => {\n                        setNotificationType(null);\n                        setNotificationContent(null);\n                    }, 5000);\n                });\n        }\n    };\n\n    const filterPerson = (event) => {\n        setFilterString(event.target.value);\n    };\n    const handlePersonChange = (event) => {\n        setNewName(event.target.value);\n    };\n    const handlePhoneNumberChange = (event) => {\n        setNewPhoneNumber(event.target.value);\n    };\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification\n                notificationType={notificationType}\n                notificationContent={notificationContent}\n            />\n            <Filter\n                filteredString={filteredString}\n                filterPerson={filterPerson}\n            />\n            <div>Add new</div>\n            <PersonForm\n                addPerson={addPerson}\n                newName={newName}\n                handlePersonChange={handlePersonChange}\n                newPhoneNumber={newPhoneNumber}\n                handlePhoneNumberChange={handlePhoneNumberChange}\n            />\n            <h2>Numbers</h2>\n            <Persons\n                persons={filteredPerson}\n                handleRemovePerson={handleRemovePerson}\n            />\n        </div>\n    );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}